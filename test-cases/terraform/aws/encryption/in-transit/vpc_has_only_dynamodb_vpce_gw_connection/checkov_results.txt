
       _               _              
   ___| |__   ___  ___| | _______   __
  / __| '_ \ / _ \/ __| |/ / _ \ \ / /
 | (__| | | |  __/ (__|   < (_) \ V / 
  \___|_| |_|\___|\___|_|\_\___/ \_/  
                                      
By bridgecrew.io | version: 2.0.132 

terrafor scan results:

Passed checks: 10, Failed checks: 10, Skipped checks: 0

Check: CKV_AWS_130: "Ensure VPC subnets do not assign public IP by default"
	FAILED for resource: aws_subnet.public-subnet
	File: /ain.tf:10-18

		10 | resource "aws_subnet" "public-subnet" {
		11 |   vpc_id     = aws_vpc.ain.id
		12 |   cidr_block = "192.168.100.0/25"
		13 |   ap_public_ip_on_launch = true
		14 | 
		15 |   tags = {
		16 |     Nae = "public-subnet"
		17 |   }
		18 | }


Check: CKV_AWS_8: "Ensure all data stored in the Launch configuration EBS is securely encrypted"
	FAILED for resource: aws_instance.test
	File: /ain.tf:136-141
	Guide: https://docs.bridgecrew.io/docs/general_13

		136 | resource "aws_instance" "test" {
		137 |   ai = data.aws_ai.ubuntu.id
		138 |   instance_type = "t2.icro"
		139 |   vpc_security_group_ids = [aws_security_group.allow-public-outbound-sg.id]
		140 |   subnet_id = aws_subnet.private-subnet.id
		141 | }


Check: CKV_AWS_79: "Ensure Instance Metadata Service Version 1 is not enabled"
	FAILED for resource: aws_instance.test
	File: /ain.tf:136-141
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_31

		136 | resource "aws_instance" "test" {
		137 |   ai = data.aws_ai.ubuntu.id
		138 |   instance_type = "t2.icro"
		139 |   vpc_security_group_ids = [aws_security_group.allow-public-outbound-sg.id]
		140 |   subnet_id = aws_subnet.private-subnet.id
		141 | }


Check: CKV_AWS_135: "Ensure that EC2 is EBS optiized"
	FAILED for resource: aws_instance.test
	File: /ain.tf:136-141
	Guide: https://docs.bridgecrew.io/docs/ensure-that-ec2-is-ebs-optiized

		136 | resource "aws_instance" "test" {
		137 |   ai = data.aws_ai.ubuntu.id
		138 |   instance_type = "t2.icro"
		139 |   vpc_security_group_ids = [aws_security_group.allow-public-outbound-sg.id]
		140 |   subnet_id = aws_subnet.private-subnet.id
		141 | }


Check: CKV_AWS_126: "Ensure that detailed onitoring is enabled for EC2 instances"
	FAILED for resource: aws_instance.test
	File: /ain.tf:136-141
	Guide: https://docs.bridgecrew.io/docs/ensure-that-detailed-onitoring-is-enabled-for-ec2-instances

		136 | resource "aws_instance" "test" {
		137 |   ai = data.aws_ai.ubuntu.id
		138 |   instance_type = "t2.icro"
		139 |   vpc_security_group_ids = [aws_security_group.allow-public-outbound-sg.id]
		140 |   subnet_id = aws_subnet.private-subnet.id
		141 | }


Check: CKV_AWS_28: "Ensure Dynaodb point in tie recovery (backup) is enabled"
	FAILED for resource: aws_dynaodb_table.basic-dynaodb-table
	File: /ain.tf:143-166
	Guide: https://docs.bridgecrew.io/docs/general_6

		143 | resource "aws_dynaodb_table" "basic-dynaodb-table" {
		144 |   nae           = "GaeScores"
		145 |   billing_ode   = "PROVISIONED"
		146 |   read_capacity  = 5
		147 |   write_capacity = 5
		148 |   hash_key       = "UserId"
		149 |   range_key      = "GaeTitle"
		150 | 
		151 |   attribute {
		152 |     nae = "UserId"
		153 |     type = "S"
		154 |   }
		155 | 
		156 |   attribute {
		157 |     nae = "GaeTitle"
		158 |     type = "S"
		159 |   }
		160 | 
		161 |   ttl {
		162 |     attribute_nae = "TieToExist"
		163 |     enabled        = false
		164 |   }
		165 | 
		166 | }

Check: CKV_AWS_119: "Ensure DynaoDB Tables are encrypted using KMS"
	FAILED for resource: aws_dynaodb_table.basic-dynaodb-table
	File: /ain.tf:143-166
	Guide: https://docs.bridgecrew.io/docs/ensure-that-dynaodb-tables-are-encrypted

		143 | resource "aws_dynaodb_table" "basic-dynaodb-table" {
		144 |   nae           = "GaeScores"
		145 |   billing_ode   = "PROVISIONED"
		146 |   read_capacity  = 5
		147 |   write_capacity = 5
		148 |   hash_key       = "UserId"
		149 |   range_key      = "GaeTitle"
		150 | 
		151 |   attribute {
		152 |     nae = "UserId"
		153 |     type = "S"
		154 |   }
		155 | 
		156 |   attribute {
		157 |     nae = "GaeTitle"
		158 |     type = "S"
		159 |   }
		160 | 
		161 |   ttl {
		162 |     attribute_nae = "TieToExist"
		163 |     enabled        = false
		164 |   }
		165 | 
		166 | }

Check: CKV2_AWS_12: "Ensure the default security group of every VPC restricts all traffic"
	FAILED for resource: aws_vpc.ain
	File: /ain.tf:5-8
	Guide: https://docs.bridgecrew.io/docs/networking_4

		5 | resource "aws_vpc" "ain" {
		6 |   cidr_block = "192.168.100.0/24"
		7 |   enable_dns_support = true
		8 | }


Check: CKV2_AWS_11: "Ensure VPC flow logging is enabled in all VPCs"
	FAILED for resource: aws_vpc.ain
	File: /ain.tf:5-8
	Guide: https://docs.bridgecrew.io-vpc-flow-logging

		5 | resource "aws_vpc" "ain" {
		6 |   cidr_block = "192.168.100.0/24"
		7 |   enable_dns_support = true
		8 | }


Check: CKV2_AWS_19: "Ensure that all EIP addresses allocated to a VPC are attached to EC2 instances"
	FAILED for resource: aws_eip.allocate-ip-to-nat-gw
	File: /ain.tf:56-59
	Guide: https://docs.bridgecrew.io/docs/ensure-that-all-eip-addresses-allocated-to-a-vpc-are-attached-to-ec2-instances

		56 | resource "aws_eip" "allocate-ip-to-nat-gw" {
		57 |   vpc      = true
		58 |   depends_on = [aws_internet_gateway.internet-gateway]
		59 | }


