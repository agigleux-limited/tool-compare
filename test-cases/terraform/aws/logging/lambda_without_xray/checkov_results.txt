
       _               _              
   ___| |__   ___  ___| | _______   __
  / __| '_ \ / _ \/ __| |/ / _ \ \ / /
 | (__| | | |  __/ (__|   < (_) \ V / 
  \___|_| |_|\___|\___|_|\_\___/ \_/  
                                      
By bridgecrew.io | version: 2.0.132 

terrafor scan results:

Passed checks: 3, Failed checks: 4, Skipped checks: 0

Check: CKV_AWS_115: "Ensure that AWS Labda function is configured for function-level concurrent execution liit"
	FAILED for resource: aws_labda_function.test_labda
	File: /ain.tf:21-39
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aws-labda-function-is-configured-for-function-level-concurrent-execution-liit

		21 | resource "aws_labda_function" "test_labda" {
		22 |   filenae      = "labda_function_payload.zip"
		23 |   function_nae = "labda_function_nae"
		24 |   role          = aws_ia_role.ia_for_labda.arn
		25 |   handler       = "exports.test"
		26 | 
		27 |   # The filebase64sha256() function is available in Terrafor 0.11.12 and later
		28 |   # For Terrafor 0.11.11 and earlier, use the base64sha256() function and the file() function:
		29 |   # source_code_hash = "${base64sha256(file("labda_function_payload.zip"))}"
		30 |   source_code_hash = filebase64sha256("labda_function_payload.zip")
		31 | 
		32 |   runtie = "nodejs12.x"
		33 | 
		34 |   environent {
		35 |     variables = {
		36 |       foo = "bar"
		37 |     }
		38 |   }
		39 | }


Check: CKV_AWS_50: "X-ray tracing is enabled for Labda"
	FAILED for resource: aws_labda_function.test_labda
	File: /ain.tf:21-39
	Guide: https://docs.bridgecrew.io/docs/bc_aws_serverless_4

		21 | resource "aws_labda_function" "test_labda" {
		22 |   filenae      = "labda_function_payload.zip"
		23 |   function_nae = "labda_function_nae"
		24 |   role          = aws_ia_role.ia_for_labda.arn
		25 |   handler       = "exports.test"
		26 | 
		27 |   # The filebase64sha256() function is available in Terrafor 0.11.12 and later
		28 |   # For Terrafor 0.11.11 and earlier, use the base64sha256() function and the file() function:
		29 |   # source_code_hash = "${base64sha256(file("labda_function_payload.zip"))}"
		30 |   source_code_hash = filebase64sha256("labda_function_payload.zip")
		31 | 
		32 |   runtie = "nodejs12.x"
		33 | 
		34 |   environent {
		35 |     variables = {
		36 |       foo = "bar"
		37 |     }
		38 |   }
		39 | }


Check: CKV_AWS_116: "Ensure that AWS Labda function is configured for a Dead Letter Queue(DLQ)"
	FAILED for resource: aws_labda_function.test_labda
	File: /ain.tf:21-39
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aws-labda-function-is-configured-for-a-dead-letter-queue-dlq

		21 | resource "aws_labda_function" "test_labda" {
		22 |   filenae      = "labda_function_payload.zip"
		23 |   function_nae = "labda_function_nae"
		24 |   role          = aws_ia_role.ia_for_labda.arn
		25 |   handler       = "exports.test"
		26 | 
		27 |   # The filebase64sha256() function is available in Terrafor 0.11.12 and later
		28 |   # For Terrafor 0.11.11 and earlier, use the base64sha256() function and the file() function:
		29 |   # source_code_hash = "${base64sha256(file("labda_function_payload.zip"))}"
		30 |   source_code_hash = filebase64sha256("labda_function_payload.zip")
		31 | 
		32 |   runtie = "nodejs12.x"
		33 | 
		34 |   environent {
		35 |     variables = {
		36 |       foo = "bar"
		37 |     }
		38 |   }
		39 | }


Check: CKV_AWS_117: "Ensure that AWS Labda function is configured inside a VPC"
	FAILED for resource: aws_labda_function.test_labda
	File: /ain.tf:21-39
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aws-labda-function-is-configured-inside-a-vpc-1

		21 | resource "aws_labda_function" "test_labda" {
		22 |   filenae      = "labda_function_payload.zip"
		23 |   function_nae = "labda_function_nae"
		24 |   role          = aws_ia_role.ia_for_labda.arn
		25 |   handler       = "exports.test"
		26 | 
		27 |   # The filebase64sha256() function is available in Terrafor 0.11.12 and later
		28 |   # For Terrafor 0.11.11 and earlier, use the base64sha256() function and the file() function:
		29 |   # source_code_hash = "${base64sha256(file("labda_function_payload.zip"))}"
		30 |   source_code_hash = filebase64sha256("labda_function_payload.zip")
		31 | 
		32 |   runtie = "nodejs12.x"
		33 | 
		34 |   environent {
		35 |     variables = {
		36 |       foo = "bar"
		37 |     }
		38 |   }
		39 | }


